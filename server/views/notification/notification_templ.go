// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package notification

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/diegoandino/wonder-go/model"
	"html/template"
)

const templateString = `
    <head>
        <script src="https://unpkg.com/htmx.org"></script>
        <link href="/static/styles.css" rel="stylesheet"/>
    </head>
    <div id="notifications-container" class="my-4">
        <div>
            <h3>Notifications</h3>
            <ul class="w-3/5">
                {{range .}}
                <li class="flex bg-gray-100 rounded-lg shadow p-4">
                    <img src="{{.ProfilePicture}}" alt="Profile Picture" class="w-16 h-16 rounded-full mr-4"/>
                    <div class="mt-12">
                        <h3>{{.Username}}</h3>
                        <button hx-post="/accept-friend-request" hx-vals='{"secondary_user_id": "{{.ID}}"}' class="bg-blue-500 hover:bg-blue-700 mr-4 text-white font-bold py-2 px-4 rounded">
                            Accept
                        </button>
                        <button hx-post="/decline-friend-request" hx-vals='{"secondary_user_id": "{{.ID}}"}' class="bg-blue-500 hover:bg-blue-700 ml-4 text-white font-bold py-2 px-4 rounded">
                            Decline
                        </button>
                    </div>
                </li>
                {{end}}
            </ul>
        </div>
    </div>
`

var parsedTemplate = template.Must(template.New("accept_button").Parse(templateString))

func Show(notifications []model.UserPayload) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.FromGoHTML(parsedTemplate, notifications).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
