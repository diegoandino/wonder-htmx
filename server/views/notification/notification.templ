package notification

import (
	"github.com/diegoandino/wonder-go/model"
	"html/template"
)

templ Show(notifications []model.UserPayload) {
	<!DOCTYPE html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<script src="https://unpkg.com/htmx.org"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.js"></script>
		<link href="/static/styles.css" rel="stylesheet"/>
		<link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.css" rel="stylesheet"/>
	</head>
	<html>
		<body>
			@Navbar()
			@templ.FromGoHTML(parsedTemplate, notifications)
		</body>
	</html>
}

templ NotificationBell() {
	<a href="/notifications" class="relative items-center inline-flex">
		<button id="notificationButton" class="relative inline-flex items-center text-sm font-medium text-center text-gray-500 hover:text-gray-900 focus:outline-none dark:hover:text-white dark:text-gray-400" type="button">
			<svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 14 20">
				<path d="M12.133 10.632v-1.8A5.406 5.406 0 0 0 7.979 3.57.946.946 0 0 0 8 3.464V1.1a1 1 0 0 0-2 0v2.364a.946.946 0 0 0 .021.106 5.406 5.406 0 0 0-4.154 5.262v1.8C1.867 13.018 0 13.614 0 14.807 0 15.4 0 16 .538 16h12.924C14 16 14 15.4 14 14.807c0-1.193-1.867-1.789-1.867-4.175ZM3.823 17a3.453 3.453 0 0 0 6.354 0H3.823Z"></path>
			</svg>
			<div class="absolute block w-3 h-3 bg-red-500 border-2 border-white rounded-full -top-0.5 start-2.5 dark:border-gray-900"></div>
		</button>
	</a>
}

templ Navbar() {
	<nav class="border-gray-200 dark:bg-gray-900 z-50 bg-transparent backdrop-filter backdrop-blur-xl">
		<div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
			<a href="/home" class="flex items-center space-x-3 rtl:space-x-reverse">
				<img src="https://flowbite.com/docs/images/logo.svg" class="h-8" alt="Flowbite Logo"/>
				<span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">Wonder</span>
			</a>
			<div class="flex md:order-2">
				<button
					type="button"
					data-collapse-toggle="navbar-search"
					aria-controls="navbar-search"
					aria-expanded="false"
					class="md:hidden text-gray-500 dark:text-gray-400 
                        hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 me-1"
				>
					<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
						<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path>
					</svg>
					<span class="sr-only">Search</span>
				</button>
				<div class="relative hidden md:block">
					<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
						<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path>
						</svg>
						<span class="sr-only">Search icon</span>
					</div>
					<input
						type="text"
						id="search-navbar"
						class="block w-full p-2 ps-10 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 
                            dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
						name="query"
						hx-get="/search-friends"
						hx-target="#search-results-dropdown"
						hx-trigger="keyup"
						hx-indicator="#loading-indicator"
						hx-empty="document.getElementById('search-results-dropdown').style.display='none';"
						placeholder="Search..."
						oninput="hideIfEmpty()"
					/>
				</div>
				<div class="ml-3 mr-3 flex">
					@NotificationBell()
				</div>
			</div>
			<div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-search">
				<div class="relative mt-3 md:hidden">
					<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
						<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path>
						</svg>
					</div>
					<input
						type="text"
						id="search-navbar"
						class="block w-full p-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
						name="query"
						hx-get="/search-friends"
						hx-target="#search-results-dropdown"
						hx-trigger="keyup"
						placeholder="Search users..."
						oninput="hideIfEmpty()"
					/>
				</div>
				<div id="search-results-dropdown" class="hidden" hx-swap-oob="delete"></div>
			</div>
		</div>
	</nav>
	<script>
		function hideIfEmpty() {
			var input = document.getElementById('search-navbar').value;
			var inputLength = input.length;
			console.log(input);
			if (inputLength === 0) {
				document.getElementById('search-results-dropdown').style.display = 'none';
			}
		}
	</script>
	<script>
        function removeItemTransition(elementId) {
          var element = document.getElementById(elementId);
          element.classList.add('fade-out');
          element.addEventListener('transitionend', function() {
              element.style.display = 'none';
              
              // Optionally, you can also hide the parent dropdown if needed
              document.getElementById('search-results-dropdown').style.display = 'none';
        });
      }
    </script>
}

const templateString = `
    <div id="notifications-container" class="my-4">
        <div class="bg-black bg-opacity-40 backdrop-blur-lg overflow-hidden rounded-lg p-4 mx-4">
            <p class="nunito-semibold text-2xl text-white mb-3">Notifications</p>
            <ul class="space-y-4">
                {{range $i, $v := .}}
                <div class="bg-black bg-opacity-20 backdrop-blur-lg rounded">
                    <li id="notification{{$i}}" class="flex rounded-lg shadow p-4">
                        <img src="{{$v.ProfilePicture}}" alt="Profile Picture" class="w-16 h-16 rounded-full mt-4 mr-4"/>
                        <div class="flex flex-col justify-center">
                            <h3 class="nunito-semibold text-white">{{$v.Username}}<p class="text-white nunito-medium">sent a friend request</p></h3>
                            <div class="flex mt-2">
                                <button
                                id="btn-accept-request"
                                hx-post="/accept-friend-request" 
                                hx-vals='{"secondary_user_id": "{{$v.ID}}"}'
                                onclick="removeItemTransition('notification{{$i}}')" 
                                class="bg-white hover:bg-gray-200 text-black outline-gray-500 font-bold py-2 px-4 rounded mr-2">
                                    Accept
                                </button>
                                <button
                                id="btn-decline-request"
                                hx-post="/decline-friend-request" 
                                hx-vals='{"secondary_user_id": "{{$v.ID}}"}'
                                onclick="removeItemTransition('notification{{$i}}')" 
                                class="bg-red-700 hover:bg-red-800 outline-white text-white font-bold py-2 px-4 rounded">
                                    Decline
                                </button>
                            </div>
                        </div>
                    </li>
                </div>
                {{end}}
            </ul>
        </div>
    </div>
`

var parsedTemplate = template.Must(template.New("notification_template").Parse(templateString))
