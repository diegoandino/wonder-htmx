// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package user

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/diegoandino/wonder-go/model"
	"html/template"
)

func Show(u model.UserPayload, friends []model.UserPayload) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><script src=\"https://unpkg.com/htmx.org\"></script><script src=\"https://kit.fontawesome.com/166d97ea2f.js\" crossorigin=\"anonymous\"></script><link href=\"/static/styles.css\" rel=\"stylesheet\"></head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Navbar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"pt-10\"><div class=\"flex flex-col items-center px-4 py-4 w-screen relative\"><i class=\"fas fa-search absolute left-6 bottom-7 pointer-events-none\" style=\"z-index: 10;\"></i> <input type=\"text\" class=\"w-full pl-10 p-2 border border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-1 focus:ring-blue-500\" name=\"query\" hx-get=\"/search-friends\" hx-target=\"#search-results-dropdown\" hx-trigger=\"keyup changed delay:500ms\" hx-indicator=\"#loading-indicator\" hx-empty=\"document.getElementById(&#39;search-results-dropdown&#39;).style.display=&#39;none&#39;;\" placeholder=\"Search\"><div id=\"loading-indicator\" class=\"hidden\">Loading...</div><div id=\"search-results-dropdown\" class=\"search-results-dropdown hidden w-full max-w-xs mt-1 bg-white shadow-lg\"></div><div id=\"notification-popup\" class=\"fixed right-0 top-20 mr-4 max-w-xs hidden\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CurrentUser(u).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Friends(friends).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Navbar() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"fixed top-4 right-4 z-10\"><div class=\"bell-icon\"><a href=\"/notifications\" target=\"_blank\" class=\"flex items-center justify-center\"><i class=\"fas fa-bell\" style=\"color: white;\"></i></a></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

const currentUserTemplate = `
    <div hx-get="/get-user-payload" hx-trigger="every 5s" hx-swap="outerHTML" class="my-4">
        <div class="currently-playing mt-4 mr-4 ml-4 p-4 rounded-lg shadow-md relative overflow-hidden">
            <div class="absolute inset-0 -z-10 bg-cover bg-center blur-xl" style="background-image: url('{{.CurrentAlbumArt}}');"></div>
            <div class="user-profile flex mb-2 z-10 relative">
                <img src="{{.ProfilePicture}}" alt="Profile Picture" class="w-16 h-16 rounded-full mr-4"/>
                <div>
                    <h3 class="nunito-bold text-xl text-white">{{.Username}}</h3>
                    <p class="text-sm text-white nunito-medium-italic">Currently Playing</p>
                </div>
            </div>
            <div class="ml-20 z-10 relative">
                <img src="{{.CurrentAlbumArt}}" alt="Album Art" class="w-36 h-36 mb-2"/>
                <p class="text-md font-medium text-white nunito-bold-italic">{{.CurrentSongName}}</p>
                <p class="text-sm text-white nunito-medium">by {{.CurrentArtistName}}</p>
                <p class="text-sm text-white nunito-semibold">{{.CurrentAlbumName}}</p>
            </div>
        </div>
    </div>
`

var parsedCurrentUserTemplate = template.Must(template.New("current_user_template").Parse(currentUserTemplate))

func CurrentUser(u model.UserPayload) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templ.FromGoHTML(parsedCurrentUserTemplate, u).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

const friendsTemplate = `
    <div id="friends-container" hx-get="/get-friends" hx-trigger="every 5s" hx-swap="outerHTML" class="my-4 mt-12">
        <div class="friends mr-4 ml-4">
            <h2 class="text-2xl font-bold mb-4 text-white" style="text-shadow: 2px 2px 2px #53a765;">Friends</h2>
            <ul class="space-y-4">
                {{range .}}
                <li class="rounded-lg shadow p-4 relative overflow-hidden">
                    <!-- Background Album Art (Blurred) -->
                    <div class="absolute inset-0 -z-10 shadow-md bg-cover bg-center blur-xl" style="background-image: url('{{.CurrentAlbumArt}}');"></div>
                    
                    <!-- Content Container -->
                    <div class="relative z-10 flex mb-2">
                        <!-- Profile Picture -->
                        <img src="{{.ProfilePicture}}" alt="Friend's Profile Picture" class="w-16 h-16 rounded-full mr-4"/>
                        <div>
                            <!-- Username -->
                            <h3 class="text-xl font-semibold text-white nunito-bold">{{.Username}}</h3>
                            <p class="text-sm text-white nunito-medium">Currently Playing</p>
                        </div>
                    </div>

                    <!-- Album Art Beside Text -->
                    <div class="relative z-10 ml-20">
                        <img src="{{.CurrentAlbumArt}}" alt="Friend's Album Art" class="w-36 h-36 mb-2"/>
                        <!-- Song Name and Artist -->
                        <a href="{{.CurrentSongUrl}}" target="_blank" class="text-md font-medium text-white hover:underline nunito-bold-italic">{{.CurrentSongName}}</a>
                        <p class="text-sm text-white nunito-medium">by {{.CurrentArtistName}}</p>
                        <p class="text-sm text-white nunito-semibold">{{.CurrentAlbumName}}</p>
                    </div>
                </li>
                {{end}}
            </ul>
        </div>
    </div>
`

var parsedFriendsTemplate = template.Must(template.New("friends_template").Parse(friendsTemplate))

func Friends(friends []model.UserPayload) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templ.FromGoHTML(parsedFriendsTemplate, friends).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
